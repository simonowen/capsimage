INCLUDE(CheckLibraryExists)
INCLUDE(FindPackageHandleStandardArgs)
INCLUDE(GNUInstallDirs)
INCLUDE(FindPkgConfig)

SET(CapsImage_FOUND FALSE)

SET(CAPSIMAGE_INCLUDE_HINTS include)
SET(CAPSIMAGE_LIB_HINTS lib64)
SET(CAPSIMAGE_VERSION_HINTS 5.1)

option(ADD_INCLUDE_SUFFIX "Add major version suffix to include directory" ON)
if (ADD_INCLUDE_SUFFIX)
  string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\1" CapsImage_INCLUDE_PATH_SUFFIX "")
endif()

find_package(PkgConfig)
IF(PKG_CONFIG_FOUND)
	PKG_SEARCH_MODULE(CapsImage libcapsimage QUIET)
	IF(CAPSIMAGE_INCLUDE_DIRS)
		message(STATUS "")
		SET(CAPSIMAGE_INCLUDE_HINTS )
	ENDIF()
	IF(CAPSIMAGE_LIBRARY_DIRS)
		SET(CAPSIMAGE_LIBRARY_HINTS )
	ENDIF()
	IF(CAPSIMAGE_VERSION)
		SET(CAPSIMAGE_VERSION_HINTS )
		if (ADD_INCLUDE_SUFFIX)
			string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\1" CapsImage_INCLUDE_PATH_SUFFIX "")
		endif()
	ENDIF()
ENDIF()

FIND_PATH(CAPSIMAGE_VERSION_HEADER NAMES CapsLibVersion.h HINTS  PATH_SUFFIXES caps caps)
IF(CAPSIMAGE_VERSION_HEADER)
	SET(CAPSIMAGE_VERSION_HEADER "/CapsLibVersion.h")
	file(STRINGS "" CAPSIMAGE_VERSION_RELEASE_LINE REGEX "^#define[ \t]+CAPS_LIB_RELEASE[ \t]+[0-9]+$")
	file(STRINGS "" CAPSIMAGE_VERSION_REVISION_LINE REGEX "^#define[ \t]+CAPS_LIB_REVISION[ \t]+[0-9]+$")
	string(REGEX REPLACE "^#define[ \t]+CAPS_LIB_RELEASE[ \t]+([0-9]+)$" "\\1" CAPSIMAGE_VERSION_RELEASE "")
	string(REGEX REPLACE "^#define[ \t]+CAPS_LIB_REVISION[ \t]+([0-9]+)$" "\\1" CAPSIMAGE_VERSION_REVISION "")
	unset(CAPSIMAGE_VERSION_RELEASE_LINE)
	unset(CAPSIMAGE_VERSION_REVISION_LINE)
	SET(CAPSIMAGE_VERSION .)
	SET(CAPSIMAGE_VERSION_STRING )
	IF(ADD_INCLUDE_SUFFIX)
		SET(CapsImage_INCLUDE_PATH_SUFFIX "")
	ENDIF()
ELSEIF(CAPSIMAGE_VERSION_HINTS)
	string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\1" CAPSIMAGE_VERSION_RELEASE "")
	string(REGEX REPLACE "^([0-9]+).([0-9]+)$" "\\2"  CAPSIMAGE_VERSION_REVISION "")
	SET(CAPSIMAGE_VERSION .)
	IF(ADD_INCLUDE_SUFFIX)
		SET(CapsImage_INCLUDE_PATH_SUFFIX "")
	ENDIF()
ENDIF()

if(ADD_INCLUDE_SUFFIX)
	message(STATUS "Using '' suffix on include directory")
endif()

FIND_PATH(CAPSIMAGE_INCLUDE_DIR NAMES CapsLibAll.h HINTS  PATH_SUFFIXES caps caps )
FIND_LIBRARY(CAPSIMAGE_LIBRARY NAMES capsimage HINTS  PATH_SUFFIXES lib capsimg capsimage  )

MARK_AS_ADVANCED(CAPSIMAGE_LIBRARY CAPSIMAGE_INCLUDE_DIR CAPSIMAGE_VERSION CAPSIMAGE_VERSION_RELEASE CAPSIMAGE_VERSION_REVISION)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(CapsImage DEFAULT_MSG
	CAPSIMAGE_LIBRARY CAPSIMAGE_INCLUDE_DIR CAPSIMAGE_VERSION CAPSIMAGE_VERSION_RELEASE CAPSIMAGE_VERSION_REVISION)

if(CAPSIMAGE_FOUND)
  set(CAPSIMAGE_LIBRARIES )
  set(CAPSIMAGE_INCLUDE_DIRS )
  if(NOT TARGET SPS::CapsImage)
    add_library(SPS::CapsImage INTERFACE IMPORTED)
    set_target_properties(SPS::CapsImage PROPERTIES
	    INTERFACE_INCLUDE_DIRECTORIES ""
	    INTERFACE_LINK_LIBRARIES ""
	    VERSION "")
  endif()
endif()
	
unset(_cmake_find_capsimage_output)
